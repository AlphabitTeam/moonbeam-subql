type KVData @jsonField {
  name: String
  value: String
  type: String
}

type Extrinsic @entity {
  id: ID!
  hash: String!
  isSigned: Boolean
  signer: Account
  section: String
  method: String
  isSuccess: Boolean
  signature: String
  timestamp: Date
  args: [KVData]
  calls: [Call] @derivedFrom(field: "extrinsic")
}

type Account @entity {
  id: ID!
  txCount: Int
  totalBalance: BigInt
  freeBalance: BigInt
  reducibleBalance: BigInt
  reservedBalance: BigInt
  miscFrozenBalance: BigInt
  feeFrozenBalance: BigInt
  isContract: Boolean
  creator: Account
  createdAt: String
  extrinsics: [Extrinsic] @derivedFrom(field: "signer")
  transferIn: [Transfer] @derivedFrom(field: "to")
  transferOut: [Transfer] @derivedFrom(field: "from")
  transactionIn: [Transaction] @derivedFrom(field: "to")
  transactionOut: [Transaction] @derivedFrom(field: "from")
  erc20_transferIn: [Erc20Transfer] @derivedFrom(field: "to")
  erc20_transferOut: [Erc20Transfer] @derivedFrom(field: "from")
  erc721_transferIn: [Erc721Transfer] @derivedFrom(field: "to")
  erc721_transferOut: [Erc721Transfer] @derivedFrom(field: "from")
  erc20_balance: [Erc20Balance] @derivedFrom(field: "account")
  erc721_balance: [Erc721Balance] @derivedFrom(field: "account")
}

type Call @entity {
  id: ID!
  section: String
  method: String
  args:[KVData] 
  timestamp: Date
  isSuccess: Boolean
  signer: Account
  extrinsic: Extrinsic
  parentCall: Call
  calls: [Call] @derivedFrom(field: "parentCall")
}

type Log @entity {
  id: ID!
  transaction: Transaction
  transactionIndex: Int
  logIndex: Int
  timestamp: Date
  address: String
  data: String
  topics: [String]
  arguments: String
  removed: Boolean
}

type Transaction @entity {
  id: ID!
  transactionHash: String
  from: Account
  to: Account
  success: Boolean
  value: BigInt
  nonce: Int
  gasLimit: BigInt
  gasPrice: BigInt
  gasUsed: BigInt
  input_data: String
  logs: [Log] @derivedFrom(field: "transaction")
  erc20_transfer: [Erc20Transfer] @derivedFrom(field: "transaction")
  erc721_transfer: [Erc721Transfer] @derivedFrom(field: "transaction")
}

type Erc20Transfer @entity {
  id: ID!
  from: Account
  to: Account
  token: Erc20Token
  value: BigInt
  transaction: Transaction
  timestamp: Date
}

type Erc721Transfer @entity {
  id: ID!
  from: Account
  to: Account
  token: Erc721Token
  value: BigInt
  transaction: Transaction
  timestamp: Date
}


type Transfer @entity {
  id: ID!
  from: Account!
  to: Account!
  token: Token
  amount: BigInt!
  timestamp: Date
  isSuccess: Boolean
  extrinsic: Extrinsic
}

type Token @entity {
  id: ID!
  name: String
  decimal: Int
  issuance: String
  volume: String
  txCount: BigInt
}

type Erc20Balance @entity {
  id: ID!
  account: Account
  token: Erc20Token
  value: BigInt
}

type Erc721Balance @entity {
  id: ID!
  account: Account
  token: Erc721Token
  value: BigInt
}

type Erc20Token @entity {
  id: ID!
  symbol: String
  name: String
  contract_address: String
  decimals: Int
  totalSupply: BigInt
  nb_holders : Int
  transfer_count: Int
  balances: [Erc20Balance] @derivedFrom(field: "token")
}

type Erc721Token @entity {
  id: ID!
  symbol: String
  name: String
  contract_address: String
  decimals: Int
  totalSupply: String
  nb_holders : Int
  transfer_count: Int
  balances: [Erc721Balance] @derivedFrom(field: "token")
}
